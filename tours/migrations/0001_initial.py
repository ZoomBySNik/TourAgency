# Generated by Django 4.2.1 on 2023-05-15 22:54

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BookingRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_request', models.DateField(auto_now_add=True, verbose_name='Дата заявки')),
                ('status', models.CharField(choices=[('new', 'Новая'), ('processing', 'В обработке'), ('approved', 'Подтверждена'), ('rejected', 'Отклонена'), ('completed', 'Завершена'), ('cancelled', 'Отменена')], default='new', max_length=20, verbose_name='Статус заявки')),
            ],
            options={
                'verbose_name': 'Заявка на бронирование',
                'verbose_name_plural': 'Заявки на бронирование',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=80, unique=True, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('phone_number', models.CharField(max_length=18, verbose_name='Номер телефона')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=80, verbose_name='Наименование')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('address', models.CharField(max_length=120, verbose_name='Адрес')),
                ('star_rating', models.IntegerField(choices=[(0, 'Нет звезд'), (1, '1 звезда'), (2, '2 звезды'), (3, '3 звезды'), (4, '4 звезды'), (5, '5 звезд')], validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='Звездность гостиницы')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tours.city', verbose_name='Город')),
            ],
            options={
                'verbose_name': 'Гостиница',
                'verbose_name_plural': 'Гостиницы',
                'unique_together': {('title', 'city')},
            },
        ),
        migrations.CreateModel(
            name='Insurance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120, verbose_name='Наименование')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Условия страховки')),
            ],
            options={
                'verbose_name': 'Страховка',
                'verbose_name_plural': 'Страховки',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Дата начала(для туров)')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания(для туров)')),
            ],
            options={
                'verbose_name': 'Услуга',
                'verbose_name_plural': 'Услуги',
            },
        ),
        migrations.CreateModel(
            name='TourismManager',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('date_of_employment', models.DateField(verbose_name='Дата приема на работу')),
                ('date_of_dismissal', models.DateField(blank=True, null=True, verbose_name='Дата увольнения')),
            ],
            options={
                'verbose_name': 'Менеджер по туризму',
                'verbose_name_plural': 'Менеджеры по туризму',
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TypeOfHotelRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, unique=True, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Тип номера',
                'verbose_name_plural': 'Типы номеров',
            },
        ),
        migrations.CreateModel(
            name='TypeOfResort',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120, verbose_name='Наименование')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Тип курорта',
                'verbose_name_plural': 'Типы курортов',
            },
        ),
        migrations.CreateModel(
            name='TypeОfHotelCatering',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, unique=True, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Тип питания',
                'verbose_name_plural': 'Типы питаний',
            },
        ),
        migrations.CreateModel(
            name='AdditionalService',
            fields=[
                ('service_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tours.service')),
                ('title', models.CharField(max_length=120, verbose_name='Наименование')),
                ('type_of_service', models.CharField(max_length=40, verbose_name='Вид услуги')),
            ],
            options={
                'verbose_name': 'Дополнительная услуга',
                'verbose_name_plural': 'Дополнительные услуги',
            },
            bases=('tours.service',),
        ),
        migrations.CreateModel(
            name='LivingConditions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tours.hotel', verbose_name='Отель')),
                ('type_of_hotel_catering', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tours.typeоfhotelcatering', verbose_name='Тип питания')),
                ('type_of_hotel_room', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tours.typeofhotelroom', verbose_name='Тип номера')),
            ],
            options={
                'verbose_name': 'Условия проживания',
                'verbose_name_plural': 'Условия проживания',
            },
        ),
        migrations.CreateModel(
            name='BookingRequestPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(30)], verbose_name='Количество')),
                ('booking_order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tours.bookingrequest', verbose_name='Заявка на бронирование')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tours.service', verbose_name='Услуга')),
            ],
            options={
                'verbose_name': 'Позиция заявки',
                'verbose_name_plural': 'Позиции заявок',
            },
        ),
        migrations.AddField(
            model_name='bookingrequest',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tours.customer', verbose_name='Клиент'),
        ),
        migrations.CreateModel(
            name='Tour',
            fields=[
                ('service_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tours.service')),
                ('title', models.CharField(max_length=120, verbose_name='Наименование')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('departure_city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tours.city', verbose_name='Город отправления')),
                ('insurance', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tours.insurance', verbose_name='Страховка')),
                ('living_conditions', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tours.livingconditions', verbose_name='Условия проживания')),
                ('type_of_resort', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tours.typeofresort', verbose_name='Тип курорта')),
            ],
            options={
                'verbose_name': 'Тур',
                'verbose_name_plural': 'Туры',
            },
            bases=('tours.service',),
        ),
    ]
